# 	$id
# 	$repository
# 	$method
# 	$release_name
#	$release_path
#	$shared_path
#	${!branch}
#   ${!deploy_to}
#	${hosts[@]}
#	${tasks[@]}

# Abort on error
set -e;

echo -e "----------- $counter Project $green$id$std"

copy_path=$copy_dir"/"$release_name"/"${!branch}

if [ ! -f "$copy_path/$release_name.tgz" ] ; 
then
	exec_wrap "$id:clone" $method $repository $copy_path"/"$release_name
	exec_wrap "$id:clone:clean" rm -rf $copy_path"/"$release_name"/".git
	exec_wrap "$id:compress" tar -zcf $copy_path/$release_name.tgz -C $copy_path"/" $release_name
fi

for hostid in "${hosts[@]}"
do
	host="hosts_"$hostid"_host"
	user="hosts_"$hostid"_user"

	echo -e "              ---- Working on host $green"${!host}"$std"

	exec_wrap "$id:scp" scp $copy_path/$release_name.tgz ${!user}@${!host}:/tmp/
	exec_wrap "$id:remote:mvtarball" ssh ${!user}@${!host} mv /tmp/$release_name.tgz ${!deploy_to}/releases/
	exec_wrap "$id:remote:untar" ssh ${!user}@${!host} tar -zxf ${!deploy_to}/releases/$release_name.tgz -C ${!deploy_to}/releases/
	exec_wrap "$id:remote:untar" ssh ${!user}@${!host} rm -f ${!deploy_to}/releases/$release_name.tgz

	. $abs_path/lib/replace_vars
	for task in "${tasks[@]}"
	do
		if [[ $task == "tasks-common"* ]] ; 
			then 
			 replace_vars $abs_path"/"$task
			 exec_wrap "$id:task:$task" ssh ${!user}@${!host} $commmand
			else
			 exec_wrap "$id:task:$task" ssh ${!user}@${!host} $commmand
		fi
	done

	commmand=""
	replace_vars $abs_path"/tasks-native/current-new-release"
	exec_wrap "$id:task:publish" ssh ${!user}@${!host} $commmand
done

